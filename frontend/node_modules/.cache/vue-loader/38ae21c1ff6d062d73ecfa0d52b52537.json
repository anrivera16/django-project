{"remainingRequest":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/arivera/projects/django_example/django-vue-task-manager/frontend/src/components/TaskManager.vue?vue&type=style&index=0&id=0091ec68&scoped=true&lang=css","dependencies":[{"path":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/src/components/TaskManager.vue","mtime":1727735456017},{"path":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/node_modules/css-loader/dist/cjs.js","mtime":1727735846274},{"path":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1727735852967},{"path":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/node_modules/postcss-loader/src/index.js","mtime":1727735846432},{"path":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1727735845939},{"path":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1727735846432}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb21wbGV0ZWQgewogIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOwp9Cg=="},{"version":3,"sources":["/Users/arivera/projects/django_example/django-vue-task-manager/frontend/src/components/TaskManager.vue"],"names":[],"mappings":";AAiEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B","file":"/Users/arivera/projects/django_example/django-vue-task-manager/frontend/src/components/TaskManager.vue","sourceRoot":"","sourcesContent":["<!-- src/components/TaskManager.vue -->\n<template>\n  <div class=\"task-manager\">\n    <h1>Task Manager</h1>\n    <form @submit.prevent=\"addTask\">\n      <input v-model=\"newTask\" placeholder=\"Add a new task\" />\n      <button type=\"submit\">Add Task</button>\n    </form>\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.id\">\n        <input\n          type=\"checkbox\"\n          :checked=\"task.completed\"\n          @change=\"toggleTask(task)\"\n        />\n        <span :class=\"{ completed: task.completed }\">{{ task.title }}</span>\n        <button @click=\"deleteTask(task)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TaskManager',\n  data() {\n    return {\n      tasks: [],\n      newTask: '',\n    };\n  },\n  mounted() {\n    this.fetchTasks();\n  },\n  methods: {\n    async fetchTasks() {\n      const response = await axios.get('http://localhost:8000/api/tasks/');\n      this.tasks = response.data;\n    },\n    async addTask() {\n      if (this.newTask.trim()) {\n        const response = await axios.post('http://localhost:8000/api/tasks/', {\n          title: this.newTask,\n        });\n        this.tasks.unshift(response.data);\n        this.newTask = '';\n      }\n    },\n    async toggleTask(task) {\n      const response = await axios.patch(`http://localhost:8000/api/tasks/${task.id}/`, {\n        completed: !task.completed,\n      });\n      Object.assign(task, response.data);\n    },\n    async deleteTask(task) {\n      await axios.delete(`http://localhost:8000/api/tasks/${task.id}/`);\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.completed {\n  text-decoration: line-through;\n}\n</style>\n"]}]}